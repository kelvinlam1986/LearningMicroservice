{
  "GlobalConfiguration": {
    "BaseUrl": "http://apigw.ocelot"
  },
  "Routes": [
    // Customer api: http://localhost:5003/api/customers
    {
      "UpstreamPathTemplate": "/customers/{username}",
      "UpstreamHttpMethod": [
        "GET"
      ],
      "DownstreamPathTemplate": "/api/customers/{username}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6003"
        }
      ]
    },

    // Product api: http://localhost:5002/api/products
    {
      "UpstreamPathTemplate": "/products/{any}",
      "UpstreamHttpMethod": [
        "GET"
      ],
      "DownstreamPathTemplate": "/api/products/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6002"
        }
      ]
    },
    // Product api: http://localhost:5002/api/products
    {
      "UpstreamPathTemplate": "/products/{any}",
      "UpstreamHttpMethod": [
        "PUT",
        "DELETE"
      ],
      "DownstreamPathTemplate": "/api/products/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6002"
        }
      ],
      "RouteClaimsRequirement": {
        "Role": "Admin"
      }
    },
    {
      "UpstreamPathTemplate": "/products",
      "UpstreamHttpMethod": [
        "POST"
      ],
      "DownstreamPathTemplate": "/api/products",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6002"
        }
      ],
      "RateLimitOptions": {
        "ClientWhitelist": [], // the client in this array will not be affected by rate limit
        "EnableRateLimiting": true,
        "Period": "2s",
        "PeriodTimespan": 2, // retry after a certain number of seconds
        "Limit": 10
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2, // specifies how many exception in a row will trigger a circuit break.
        "DurationOfBreak": 3000, // miliseconds
        "TimeoutValue": 5000 // If the service throw a seconds exception, the service will not be accessible for 5 seconds 
      }

    },

    {
      "UpstreamPathTemplate": "/products",
      "UpstreamHttpMethod": [
        "GET"
      ],
      "DownstreamPathTemplate": "/api/products",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6002"
        }
      ],
      "RateLimitOptions": {
        "ClientWhitelist": [], // the client in this array will not be affected by rate limit
        "EnableRateLimiting": true,
        "Period": "2s",
        "PeriodTimespan": 2, // retry after a certain number of seconds
        "Limit": 10
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2, // specifies how many exception in a row will trigger a circuit break.
        "DurationOfBreak": 3000, // miliseconds
        "TimeoutValue": 5000 // If the service throw a seconds exception, the service will not be accessible for 5 seconds 
      },
      "FileCacheOptions": {
        "TtlSeconds": 15
      }
    },

    {
      "UpstreamPathTemplate": "/products/get-product-by-no/{productNo}",
      "UpstreamHttpMethod": [
        "GET"
      ],
      "DownstreamPathTemplate": "/api/products/get-product-by-no/{productNo}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6002"
        }
      ]
    },

    // Basket api: http://localhost:5004/api/baskets
    {
      "UpstreamPathTemplate": "/baskets/{username}",
      "UpstreamHttpMethod": [
        "GET",
        "DELETE"
      ],
      "DownstreamPathTemplate": "/api/baskets/{username}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6004"
        }
      ]
    },

    {
      "UpstreamPathTemplate": "/baskets",
      "UpstreamHttpMethod": [
        "POST"
      ],
      "DownstreamPathTemplate": "/api/baskets",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6004"
        }
      ]
    },

    {
      "UpstreamPathTemplate": "/baskets/checkout",
      "UpstreamHttpMethod": [
        "POST"
      ],
      "DownstreamPathTemplate": "/api/baskets/checkout",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6004"
        }
      ]
    },

    // Order api: http://localhost:5005/api/{version}/orders
    {
      "UpstreamPathTemplate": "/{version}/orders/{any}",
      "UpstreamHttpMethod": [
        "GET",
        "PUT",
        "DELETE"
      ],
      "DownstreamPathTemplate": "/api/{version}/orders/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6005"
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/{version}/orders",
      "UpstreamHttpMethod": [
        "POST"
      ],
      "DownstreamPathTemplate": "/api/{version}/orders",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6005"
        }
      ]
    },

    // Inventory api: http://localhost:5006/api/inventory
    {
      "UpstreamPathTemplate": "/inventory/items/{any}",
      "UpstreamHttpMethod": [
        "GET"
      ],
      "DownstreamPathTemplate": "/api/inventory/items/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6006"
        }
      ]
    },

    {
      "UpstreamPathTemplate": "/inventory/items/{any}/paging",
      "UpstreamHttpMethod": [
        "GET"
      ],
      "DownstreamPathTemplate": "/api/inventory/items/{any}/paging",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6006"
        }
      ]
    },

    {
      "UpstreamPathTemplate": "/inventory/{any}",
      "UpstreamHttpMethod": [
        "GET",
        "DELETE"
      ],
      "DownstreamPathTemplate": "/api/inventory/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6006"
        }
      ]
    },

    {
      "UpstreamPathTemplate": "/inventory/purchase/{any}",
      "UpstreamHttpMethod": [
        "POST"
      ],
      "DownstreamPathTemplate": "/api/inventory/purchase/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6006"
        }
      ]
    }

  ]
}
